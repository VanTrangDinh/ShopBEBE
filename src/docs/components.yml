components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user
    
    NewProduct:
      type: object
      required:
        - product_name
        - product_thumb
        - product_description
        - product_price
        - product_quantity
        - product_type
        - product_attribute
      properties:
        product_name:
          type: string
          description: The name of the product
        product_thumb:
          type: string
          description: The thumbnail image URL of the product
        product_description:
          type: string
          description: The description of the product
        product_price:
          type: number
          description: The price of the product
        product_quantity:
          type: integer
          description: The quantity of the product
        product_type:
          type: string
          enum:
            - Electronics
            - Clothing
            - Furniture
          description: The type of the product
        product_attribute:
          type: object
          properties:
            manufacturer:
              type: string
              description: The manufacturer of the product
            model:
              type: string
              description: The model of the product
            color:
              type: string
              description: The color of the product

    Product:
      type: object
      properties:
        product_name:
          type: string
        product_thumb:
          type: string
        product_description:
          type: string
        product_slug:
          type: string
        product_price:
          type: number
        product_quantity:
          type: number
        product_type:
          type: string
          enum: ['Electronics', 'Clothing', 'Furniture']
        product_shop:
          type: object
          properties:
            type:
              type: string
            ref:
              type: string
        product_attribute:
          type: object
        product_ratingAverage:
          type: number
          default: 4.5
          minimum: 1
          maximum: 5
        product_variations:
          type: array
          default: []
        isDraft:
          type: boolean
          default: true
          index: true
          select: false
        isPublished:
          type: boolean
          default: false
          index: true
          select: false
      example:
        product_variations: []
        isDraft: true
        isPublished: false
        _id: 649830c3a9c1941e8aa44bef
        product_name: Sofa Kandy Grey
        product_thumb: product_thumb
        product_description: new product
        product_price: 249
        product_quantity: 200
        product_shop: 6497bae63831453bf96906c4
        product_attribute:
          manufacturer: abcde
          model: abc
          color: gold
        product_type: Furniture
        createdAt: '2023-06-25T12:19:15.637Z'
        updatedAt: '2023-06-25T12:19:15.637Z'
        product_slug: sofa-kandy-grey
        __v: 0

    Clothing:
      type: object
      properties:
        brand:
          type: string
        product_shop:
          type: object
          properties:
            type:
              type: string
            ref:
              type: string
        size:
          type: string
        material:
          type: string

    Electronics:
      type: object
      properties:
        manufacturer:
          type: string
        model:
          type: string
        color:
          type: string
        product_shop:
          type: object
          properties:
            type:
              type: string
            ref:
              type: string

    Furniture:
      type: object
      properties:
        brand:
          type: string
        product_shop:
          type: object
          properties:
            type:
              type: string
            ref:
              type: string
        size:
          type: string
        material:
          type: string

    Shop:
      type: object
      properties:
        _id:
          type: string
          example: '6495315572c3de5b2923a2cb'
        name:
          type: string
          example: 'fake name'
        email:
          type: string
          format: email
          example: 'fake@example.com'

    Tokens:
      type: object
      properties:
        accessToken:
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDk1MzE1NTcyYzNkZTViMjkyM2EyY2IiLCJlbWFpbCI6ImZha2VAZXhhbXBsZS5jb20iLCJpYXQiOjE2ODc0OTkwOTMsImV4cCI6MTY4NzY3MTg5M30.34d_rrnUcDnYJrAPtyrOv96TC7aGPY-noNbWZhgxKZY'
        refreshToken:
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDk1MzE1NTcyYzNkZTViMjkyM2EyY2IiLCJlbWFpbCI6ImZha2VAZXhhbXBsZS5jb20iLCJpYXQiOjE2ODc0OTkwOTMsImV4cCI6MTY4ODEwMzg5M30.Hd8O4ZrTmKMT7dxK6CBqrKdzBiNUaqZg09FYkoWSDLo'

    Token:
      type: object
      properties:
        tokens:
          type: string
        # expires:
        #   type: string
        #   format: date-time
      example:
        tokens: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        # expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKeyAuth: # arbitrary name for the security scheme
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: x-api-key # name of the header, query parameter or cookie
      
    client-id:
      type: apiKey
      name: x-client-id
      in: header
    authorization:
      type: apiKey
      in: header
      name: authorization
    refresh-token:
      type: apiKey
      in: header
      name: x-rtoken-id
